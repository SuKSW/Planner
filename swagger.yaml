swagger: "2.0"
info:
  version: "1.0.0"
  title: "Swagger Planner"
host: "localhost:9000"
basePath: "/"
tags:
- name: "Todos"
- name: "Appointments"
- name: "Notes"
schemes:
- "http"
paths:
  /todos:
    get:
      tags:
      - "Todos"
      summary: "Get all todos"
      operationId: "getAllTags"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Returned all todos"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Todo"
    post:
      tags:
      - "Todos"
      summary: "Create new todo"
      operationId: "addTodo"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Todo object"
        required: true
        schema:
          $ref: "#/definitions/Todo"
      responses:
        "201":
          description: "Todo created"
        "400":
          description: "Invalid input"
  /todos/{todoId}:
    get:
      tags:
      - "Todos"
      summary: "Get todo by id"
      operationId: "getTodoById"
      produces:
      - "application/json"
      parameters:
      - name: "todoId"
        in: "path"
        description: "Id of the todo to return"
        required: true
        type: "string"
      responses:
        "200":
          description: "Returned the requested todo"
          schema:
            $ref: "#/definitions/Todo"
        "400":
          description: "Invalid todo id"
        "404":
          description: "Todo with given id not found"
    put:
      tags:
      - "Todos"
      summary: "Update an existing todo"
      operationId: "updateTodo"
      consumes:
      - "application/json"
      parameters:
      - name: "todoId"
        in: "path"
        description: "Id of the todo to update"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Todo object to update"
        required: true
        schema:
          $ref: "#/definitions/Todo"
      responses:
        "204":
          description: "Todo updated"
        "400":
          description: "Invalid input or todo id"
        "404":
          description: "Todo with given id not found"
    delete:
      tags:
      - "Todos"
      summary: "Deletes a todo"
      operationId: "deleteTodo"
      produces:
      - "application/json"
      parameters:
      - name: "todoId"
        in: "path"
        description: "Todo id to delete"
        required: true
        type: "string"
      responses:
        "204":
          description: "Todo deleted"
        "400":
          description: "Invalid todo id"
        "404":
          description: "Todo with given id not found"
definitions:
  Todo:
    type: "object"
    required:
    - "checked"
    - "priority"
    - "task"
    properties:
      id:
        type: "integer"
        format: "int64"
      checked:
        type: "boolean"
      priority:
        type: "string"
        enum:
        - "high"
        - "medium"
        - "low"
      task:
        type: "string"
        example: "Finish homework"